// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario{

    id Int  @id @default(autoincrement())
    Nombres String  
    Image Bytes  @map("VARBINARY(255)")
    Telefono String
    Apellidos String?
    UserName String  @unique
    Password String  
    Email  String  @unique 
    Celular String
    DateCreated  DateTime @default(now())
    id_Rol Int
    roles Roles @relation(fields: [id_Rol],references: [id])
    productos Productos []
}

model Roles{

    id Int @id @default(autoincrement())
    Nombre String 
    usuarios Usuario[]
    admins Admin[]
}

model Catalogos{

   id Int @id @default(autoincrement())
   Nombre String  
   Descripcion String? 
   categorias Categorias[]
}


model Categorias{

  id Int @id @default(autoincrement())
  Nombre String @unique  
  productos Productos[]
  id_Cat Int 
  catalogos Catalogos @relation(fields: [id_Cat],references: [id])  
}


model Admin{

  id Int @id @default(autoincrement())
  Email String @unique 
  UserName String 
  Password String 
  celular String 
  id_Rol Int
  roles Roles @relation(fields: [id_Rol],references: [id])
}

model Productos{

  id Int @id @default(autoincrement())
  Nombre String @unique 
  Descripcion String 
  Disponibilidad Boolean
  Precio String 
  Image Bytes
  Telefono String
  Presentacion String 
  id_Categoria Int
  id_Usuario Int
  categorias Categorias @relation(fields: [id_Categoria],references: [id])  
  usuarios Usuario  @relation(fields: [id_Usuario],references: [id])  
}

